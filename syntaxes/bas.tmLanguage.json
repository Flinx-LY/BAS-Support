{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Bilibili Animation Script",
  "patterns": [
    {
      "name": "meta.struct.def.text.bas",
      "begin": "(\\bdef\\b)\\s+(text)\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*(\\{)",
      "end": "\\}",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.function.def.text.bas"
        },
        "2": {
          "name": "entity.name.type.text.bas"
        },
        "3": { "name": "entity.name.object.def.text.bas" },
        "4": { "name": "punctuation.section.block.begin" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.section.block.end" }
      },
      "patterns": [
        { "include": "#strings" },
        {
          "name": "keyword.operator.assignment.def.bas",
          "match": "="
        },
        { "include": "#attributes.common" },
        { "include": "#attributes.text.font" },
        { "include": "#attributes.text.other" },
        { "include": "#number.time" },
        { "include": "#number.percentage" },
        { "include": "#number.hexadecimal" },
        { "include": "#number.float" },
        { "include": "#number.decimal" }
      ]
    },
    {
      "name": "meta.struct.let.bas",
      "begin": "\\b(let)\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*(=)\\s*([A-Za-z_][A-Za-z0-9_]*)\\s*(\\{)",
      "end": "\\}",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.function.let.bas"
        },
        "2": { "name": "entity.name.object.let.new.bas" },
        "3": {
          "name": "keyword.operator.assignment.let"
        },
        "4": { "name": "entity.name.object.let.recall.bas" },
        "5": { "name": "punctuation.section.block.begin" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.section.block.end" }
      },
      "patterns": [
        { "include": "#strings" },
        {
          "name": "keyword.operator.assignment.def.bas",
          "match": "="
        },
        { "include": "#attributes.common" },
        { "include": "#attributes.text.font" },
        { "include": "#attributes.text.other" },
        { "include": "#number.time" },
        { "include": "#number.percentage" },
        { "include": "#number.hexadecimal" },
        { "include": "#number.float" },
        { "include": "#number.decimal" }
      ]
    },
    {
      "name": "meta.struct.set.bas",
      "begin": "\\b(set)\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*(\\{)",
      "end": "(\\})\\s*(\\d+\\.*\\d*)(s|ms)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.function.set.bas"
        },
        "2": { "name": "entity.name.object.set.bas" },
        "3": { "name": "punctuation.section.block.begin" }
      },
      "endCaptures": {
        "1": { "name": "punctuation.section.block.end" },
        "2": { "name": "constant.numeric.time.after-set.value.bas" },
        "3": { "name": "punctuation.separator.time-unit.after-set.bas" }
      },
      "patterns": [
        { "include": "#strings" },
        {
          "name": "keyword.operator.assignment.def.bas",
          "match": "="
        },
        { "include": "#attributes.common" },
        { "include": "#attributes.text.font" },
        { "include": "#attributes.text.other" },
        { "include": "#number.time" },
        { "include": "#number.percentage" },
        { "include": "#number.hexadecimal" },
        { "include": "#number.float" },
        { "include": "#number.decimal" }
      ]
    },
    {
      "name": "meta.struct.then-set.bas",
      "begin": "\\b(then)\\s+(set)\\s+([A-Za-z_][A-Za-z0-9_]*)\\s*(\\{)",
      "end": "(\\})\\s*(\\d+\\.*\\d*)(s|ms)",
      "beginCaptures": {
        "1": {
          "name": "keyword.declaration.function.then-set.then.bas"
        },
        "2": {
          "name": "keyword.declaration.function.then-set.set.bas"
        },
        "3": { "name": "entity.name.object.then-set.bas" },
        "4": { "name": "punctuation.section.block.begin" }
      },
      "endCaptures": {
        "1": { "name": "punctuation.section.block.end" },
        "2": { "name": "constant.numeric.time.after-set.value.bas" },
        "3": { "name": "punctuation.separator.time-unit.after-set.bas" }
      },
      "patterns": [
        { "include": "#strings" },
        {
          "name": "keyword.operator.assignment.def.bas",
          "match": "="
        },
        { "include": "#attributes.common" },
        { "include": "#attributes.text.font" },
        { "include": "#attributes.text.other" },
        { "include": "#number.time" },
        { "include": "#number.percentage" },
        { "include": "#number.hexadecimal" },
        { "include": "#number.float" },
        { "include": "#number.decimal" }
      ]
    },
    {
      "name": "comment.line.double-slash.bas",
      "match": "(//).*",
      "captures": {
        "1": { "name": "punctuation.definition.comment.bas" }
      }
    },
    {
      "name": "keyword.declaration.function.def.bas",
      "match": "\\bdef\\b"
    },
    {
      "name": "keyword.declaration.function.let.bas",
      "match": "\\blet\\b"
    },
    {
      "name": "keyword.declaration.function.set.bas",
      "match": "\\bset\\b"
    },
    {
      "name": "entity.name.type.text.bas",
      "match": "\\btext\\b"
    },
    {
      "name": "entity.name.type.button.bas",
      "match": "\\bbutton\\b"
    },
    {
      "name": "entity.name.type.path.bas",
      "match": "\\bpath\\b"
    },
    {
      "name": "entity.name.object.def.bas",
      "match": "(?<=(text|button|path)\\s+)[A-Za-z_][A-Za-z0-9_]*"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.bas",
          "match": "\\b(if|while|for|return)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.bas",
      "begin": "\"",
      "end": "\"",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end" }
      },
      "patterns": [
        {
          "name": "constant.character.escape.bas",
          "match": "\\\\."
        }
      ]
    },
    "blocks": {
      "name": "meta.block.bas",
      "begin": "\\{",
      "end": "\\}",
      "patterns": [
        {
          "include": "#strings"
        }
      ]
    },
    "number.decimal": {
      "name": "constant.numeric.integer.decimal.bas",
      "match": "\\d+"
    },
    "number.hexadecimal": {
      "name": "constant.numeric.integer.hexadecimal.bas",
      "match": "(0)(x)([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})",
      "captures": {
        "1": { "name": "punctuation.separator.hexadecimal-prefix.zero.bas" },
        "2": { "name": "punctuation.separator.hexadecimal-prefix.x.bas" }
      }
    },
    "number.percentage": {
      "name": "constant.numeric.percentage.bas",
      "match": "\\d+\\.*\\d*(%)",
      "captures": {
        "1": { "name": "punctuation.separator.percentage.bas" }
      }
    },
    "number.float": {
      "name": "constant.numeric.float.bas",
      "match": "\\d+(\\.)\\d*",
      "captures": {
        "1": { "name": "punctuation.separator.float-point.bas" }
      }
    },
    "number.time": {
      "name": "constant.numeric.time.bas",
      "match": "\\d+\\.*\\d*(s|ms)",
      "captures": {
        "1": { "name": "punctuation.separator.time-unit.bas" }
      }
    },
    "attributes.common": {
      "name": "entity.name.attributes.common.bas",
      "match": "\\b(x|y|zIndex|scale|duration)\\b"
    },
    "attributes.text.font": {
      "name": "entity.name.attributes.text.font.bas",
      "match": "\\b(alpha|color|fontSize|fontFamily|bold|textShadow|strokeWidth|strokeColor)\\b"
    },
    "attributes.text.other": {
      "name": "entity.name.attributes.text.other.bas",
      "match": "\\b(content|anchorX|anchorY|rotateX|rotateY|rotateZ|parent)\\b"
    }
  },
  "scopeName": "source.bas"
}
